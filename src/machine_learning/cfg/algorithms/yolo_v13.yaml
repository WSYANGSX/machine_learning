algorithm: 
  # common
  name: "yolo_v13"
  task: "detect"
  imgsz: 640
  
  # train
  use_dfl: True
  reg_max: 16
  topk: 10
  alpha: 0.5
  beta: 6.0
  close_mosaic_epoch: 0.9
  max_det: 300

  # loss weight
  box: 7.5 # (float) box loss gain
  cls: 0.5 # (float) cls loss gain (scale with pixels)
  dfl: 1.5 # (float) dfl loss gain

  # detection
  iou_thres: 0.7
  conf_thres_val: 0.001
  conf_thres_det: 0.25

optimizer:
  type: "Adam"
  learning_rate: 1.0e-4
  final_factor: 0.01
  beta1: 0.937
  beta2: 0.999
  eps: 1.0e-8
  weight_decay: 0.0005

  # type: "SGD"
  # learning_rate: 0.01
  # final_factor: 0.01
  # momentum: 0.9
  # weight_decay: 0.0005

  grad_clip: 1.0
  warmup_epochs: 3.0 # (float) warmup epochs (fractions ok)
  warmup_momentum: 0.8 # (float) warmup initial momentum
  warmup_bias_lr: 0.0 # 0.1 # (float) warmup initial bias lr
  
scheduler:
  # type: "ReduceLROnPlateau"
  # factor: 0.5
  # patience: 5 
  
  type: CustomLRDecay


net:
  initialize_weights: True
  args:
    imgsz: 640
    channel: 3
    nc: 80
    scale: "n"

data:
  single_cls: False
  rect: False
  stride: 32
  bgr: 0.0
  mask_overlap: True # (bool) merge object masks into a single image mask during training (segment train only)
  mask_ratio: 4 # (int) mask downsample ratio (segment train only)
  nbs: 64 # (int) nominal batch size, -1 represent no
  batch_size: 256
  mosaic: 1.0
  mixup: 0.2
  copy_paste: 0.6
  erasing: 0.4
  crop_fraction: 1.0
  copy_paste_mode: "flip" # (str) the method to do copy_paste augmentation (flip, mixup)
  auto_augment: randaugment # (str) auto augmentation policy for classification (randaugment, autoaugment, augmix)
  flipud: 0.0 # (float) image flip up-down (probability)
  fliplr: 0.5 # (float) image flip left-right (probability)
  hsv_h: 0.015 # (float) image HSV-Hue augmentation (fraction)
  hsv_s: 0.7 # (float) image HSV-Saturation augmentation (fraction)
  hsv_v: 0.4 # (float) image HSV-Value augmentation (fraction)
  perspective: 0.0
  degrees: 0.0 # (float) image rotation (+/- deg)
  translate: 0.1 # (float) image translation (+/- fraction)
  scale: 0.5 # (float) image scale (+/- gain)
  shear: 0.0 # (float) image shear (+/- deg)